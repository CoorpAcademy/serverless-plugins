service: serverless-offline-dynamodb-streams

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs10.x

plugins:
  localPath: '../../packages'
  modules:
    - serverless-offline-ssm-provider
    - serverless-offline-dynamodb-streams
    - serverless-offline

functions:
  myPromiseHandler:
    handler: lambda/handler.promise
    events:
      - stream: arn:aws:dynamodb:region:XXXXXX:table/MyFirstTable
      - stream:
          type: dynamodb
          arn: arn:aws:dynamodb:region:XXXXXX:table/MySecondTable
  myCallbackHandler:
    handler: lambda/handler.callback
    events:
      - stream:
          type: dynamodb
          tableName: MyThirdTable
          batchSize: 100
          maximumRetryAttempts: 10
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - MyThirdTable
              - Arn
  myPythonHandler:
    runtime: python3.7
    handler: lambda/handler.handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - MyFourthTable
              - Arn

resources:
  Resources:
    MyFourthTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MyFourthTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

custom:
  serverless-offline:
    httpPort: 3443
  serverless-offline-dynamodb-streams: ${file(./custom.yml):serverless-offline-dynamodb-streams}
